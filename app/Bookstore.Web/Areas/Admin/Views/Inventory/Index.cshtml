@model Bookstore.Web.Areas.Admin.Models.Inventory.InventoryIndexViewModel

@{
    ViewData["Title"] = "Inventory";
}

@await Html.PartialAsync("_MessageBanner")

<div class="d-flex m-3">
    <h5 class="me-auto">Inventory</h5>
    @Html.ActionLink("New Book", "Create", new { controller = "Inventory"}, new { @class = "btn btn-primary" })
</div>

<div class="card mx-3">
    <div class="card-body">
        <form class="row row-cols-lg-auto g-3 align-items-center" method="get">
            <div class="col-12">
                <label class="visually-hidden" for="NameFilterInput">Name</label>
                @Html.TextBoxFor(m => m.Filters.Name, new { placeholder = "Name", @class = "form-control", @id = "NameFilterInput" })
            </div>

            <div class="col-12">
                <label class="visually-hidden" for="AuthorFilterInput">Author</label>
                @Html.TextBoxFor(m => m.Filters.Author, new { placeholder = "Author", @class = "form-control", @id = "AuthorFilterInput" })
            </div>

            <div class="col-12">
                <label class="visually-hidden" for="PublisherFilter">Publisher</label>
                @Html.DropDownListFor(a => a.Filters.PublisherId, Model.Publishers, "All Publishers", new { @class = "form-select" })
            </div>

            <div class="col-12">
                <label class="visually-hidden" for="GenreFilter">Genre</label>
                @Html.DropDownListFor(a => a.Filters.GenreId, Model.Genres, "All Genres", new { @class = "form-select" })
            </div>

            <div class="col-12">
                <label class="visually-hidden" for="BookTypeFilter">Book type</label>
                @Html.DropDownListFor(a => a.Filters.BookTypeId, Model.BookTypes, "All Book Types", new { @class = "form-select" })
            </div>

            <div class="col-12">
                <label class="visually-hidden" for="ConditionFilter">Condition</label>
                @Html.DropDownListFor(a => a.Filters.ConditionId, Model.BookConditions, "All Book Conditions", new { @class = "form-select" })
            </div>

            <div class="col-12">
                <div class="form-check">
                    @Html.CheckBoxFor(a => a.Filters.LowStock, new { @class = "form-check-input" })
                    <label class="form-check-label" for="LowStockCheckbox">
                        Low stock
                    </label>
                </div>               
            </div>

            <div class="col-12">
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>

            <div class="col-12">
                @Html.ActionLink("Clear", "Index", new { controller = "Inventory" }, new { @class = "btn btn-secondary" })
            </div>
        </form>
    </div>
</div>

<div class="card m-3">
    <div class="card-header">
        <div class="d-flex justify-content-end">
            @await Html.PartialAsync("_Paginator")
        </div>
    </div>

    <div class="card-body">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Author</th>
                    <th scope="col">Publisher</th>
                    <th scope="col">Genre</th>
                    <th scope="col">Type</th>
                    <th scope="col">Condition</th>
                    <th scope="col">Price</th>
                    <th scope="col">Stock Level</th>
                    <th scope="col">Updated</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in Model.Items)
                {
                    <tr>
                        <td>@book.Name</td>
                        <td>@book.Author</td>
                        <td>@book.Publisher</td>
                        <td>@book.Genre</td>
                        <td>@book.BookType</td>
                        <td>@book.Condition</td>
                        <td>@book.Price.ToString("C")</td>
                        <td>@book.Quantity</td>
                        <td>@book.UpdatedOn.ToShortDateString()</td>
                        <td>
                            <div class="hstack gap-2">

                                @Html.ActionLink("View", "Details", new { controller = "Inventory", id = book.Id }, new { @class = "card-link" })                                
                                <div class="vr"></div>                               
                                @Html.ActionLink("Update", "Update", new { controller = "Inventory", id = book.Id }, new { @class = "card-link" })
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="card-footer">
        <div class="d-flex justify-content-end">
            @await Html.PartialAsync("_Paginator")
        </div>
    </div>
</div>