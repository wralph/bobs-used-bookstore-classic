@model Bookstore.Web.ViewModel.Address.AddressCreateUpdateViewModel

@{
    ViewData["Title"] = "Edit";
}

<div class="panel-body">
    <h1>Create / Update Address</h1>
    <br />

    @using (Html.BeginForm())
    {
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="AddressLine1">Address Line 1</label>
            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="AddressLine2">Address Line 2</label>
            @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label asp-for="City">City</label>
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="State">State</label>
            @Html.DropDownListFor(model => model.State, Model.States, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="Country">Country</label>
            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label asp-for="ZipCode">Zipcode</label>
            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>

        <center>
            <div class="form-group">
                <input type="submit" value="Save" class="btn" />
                <a class="btn" href="@Model.ReturnUrl">Cancel</a>
            </div>
        </center>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}